<?php

namespace App\Tests\Application;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class CategoryControllerTest extends WebTestCase
{
    private $client;
    private const CATEGORY_URL      = '/get-category';
    private const CATEGORY_ID       = '13';
    private const LATEST_POSTS_URL  = '/get-latest-posts/';

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = static::createClient();
    }

    public function testGetCategoryAPIIsReachable(): void
    {
        $this->client->xmlHttpRequest('GET', self::CATEGORY_URL."/".self::CATEGORY_ID);

        $this->assertResponseIsSuccessful();
    }

    public function testGetCategoryAPIThrowsExceptionIfIdIsNotFound(): void
    {
        $this->client->xmlHttpRequest('GET', self::CATEGORY_URL."/1");

        $this->assertResponseStatusCodeSame('404');
    }

    public function testGetCategoryAPIAsJsonResponse(): void
    {
        $this->client->xmlHttpRequest('GET', self::CATEGORY_URL."/".self::CATEGORY_ID);

        $response = $this->client->getResponse()->getContent();

        $this->assertJson($response);
    }

    public function testGetCategoryAPIHasSameKeys(): void
    {
        $this->client->xmlHttpRequest('GET', self::CATEGORY_URL."/".self::CATEGORY_ID);

        $response = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true);

        $this->assertArrayHasKey('category_name',$decoded_response);
        $this->assertArrayHasKey('articles',$decoded_response);
        $this->assertArrayHasKey('number_of_pages',$decoded_response);
    }

}
