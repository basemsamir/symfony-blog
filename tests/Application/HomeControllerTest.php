<?php

namespace App\Tests\Application;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class HomeControllerTest extends WebTestCase
{
    private $client;
    public const POSTS_URL = '/get-posts';

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = static::createClient();
    }

    public function testGetPostsAPIIsReachable(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/1");

        $this->assertResponseIsSuccessful();
    }

    public function testGetPostsAPIAsJsonResponse(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/1");

        $response = $this->client->getResponse()->getContent();

        $this->assertJson($response);
    }

    public function testGetPostsAPIHasDataKey(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/1");

        $response = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true);

        $this->assertArrayHasKey('data',$decoded_response);
    }

    public function testGetPostsAPIHasNumberOfPagesKey(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/1");

        $response = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true);

        $this->assertArrayHasKey('number_of_pages',$decoded_response);
    }

    public function testGetPostsAPIAtFirstPage(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/1");

        $response         = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true)['data'];

        $this->assertCount(3, $decoded_response);
    }

    public function testGetPostsAPIAtLastPage(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/11");

        $response         = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true)['data'];

        $this->assertCount(1, $decoded_response);
    }

    public function testGetPostsAPIAtNotFoundPage(): void
    {
        $this->client->xmlHttpRequest('GET', self::POSTS_URL."/12");

        $response         = $this->client->getResponse()->getContent();
        $decoded_response = json_decode($response, true)['data'];

        $this->assertCount(0, $decoded_response);
    }
}
