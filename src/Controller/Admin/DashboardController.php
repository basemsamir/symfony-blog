<?php

namespace App\Controller\Admin;

use App\Entity\Article;
use App\Entity\Category;
use App\Entity\Setting;
use App\Entity\User;
use App\Service\ArticleService;
use EasyCorp\Bundle\EasyAdminBundle\Config\Assets;
use EasyCorp\Bundle\EasyAdminBundle\Config\Dashboard;
use EasyCorp\Bundle\EasyAdminBundle\Config\MenuItem;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractDashboardController;
use EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * Class DashboardController
 * @package App\Controller\Admin
 */
class DashboardController extends AbstractDashboardController
{
    private $adminUrlGenerator;
    private $article_service;

    public function __construct(AdminUrlGenerator $adminUrlGenerator, ArticleService $article_service)
    {
        $this->adminUrlGenerator = $adminUrlGenerator;
        $this->article_service   = $article_service;
    }

    /**
     * @Route("/admin", name="admin")
     */
    public function index(): Response
    {
        $hasAccess = $this->isGranted('ROLE_ADMIN');
        if($hasAccess){
            return $this->render('@EasyAdmin/welcome.html.twig');
        }
        else{
            $url = $this->adminUrlGenerator
                        ->setController(ArticleCrudController::class)
                        ->setAction('index')
                        ->generateUrl();
            return $this->redirect($url);
        }
    }

    /**
     * @Route(
     *     "/admin/get-dashboard-chart",
     *     name = "dashboard-chart"
     *     )
     * @return JsonResponse
     */
    public function getDashboardChart(): JsonResponse
    {
        $chart_data = $this->article_service->getArticlesChart();
        return new JsonResponse(['chartData'=>$chart_data],200);
    }

    public function configureDashboard(): Dashboard
    {
        return Dashboard::new()
            ->setTitle('Sensive Blog');
    }

    public function configureMenuItems(): iterable
    {
        yield MenuItem::linkToDashboard('Dashboard', 'fa fa-home')
        ->setPermission('ROLE_ADMIN');
        yield MenuItem::linkToCrud('Category', 'fas fa-list', Category::class)
        ->setPermission('ROLE_ADMIN');
        yield MenuItem::linkToCrud('Article', 'fas fa-newspaper', Article::class)
        ->setPermission('ROLE_USER');
        yield MenuItem::linkToCrud('User', 'fas fa-user', User::class)
        ->setPermission('ROLE_ADMIN');
        yield MenuItem::linkToCrud('Settings', 'fa fa-gear', Setting::class)
            ->setPermission('ROLE_ADMIN');
    }

    public function configureAssets(): Assets
    {
        $assets = parent::configureAssets(); // TODO: Change the autogenerated stub
        return $assets->addJsFile('https://cdn.jsdelivr.net/npm/chart.js')
                      ->addJsFile('https://code.jquery.com/jquery-3.6.0.min.js');
    }
}
